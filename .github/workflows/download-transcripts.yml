name: Download Transcripts

on:
  workflow_dispatch:
    inputs:
      transcript_method:
        description: 'Transcript method (ytdlp or youtube_transcript_api)'
        required: true
        default: 'youtube_transcript_api'
        type: choice
        options:
          - ytdlp
          - youtube_transcript_api
      use_proxy:
        description: 'Enable Webshare proxy'
        required: false
        default: false
        type: boolean
      use_cookies:
        description: 'Enable cookies for yt-dlp'
        required: false
        default: false
        type: boolean
      max_videos:
        description: 'Maximum number of videos to process'
        required: false
        default: '50'
        type: string
      video_ids:
        description: 'Specific video IDs to process (comma-separated, optional)'
        required: false
        default: ''
        type: string

jobs:
  download-transcripts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create configuration file
      run: |
        cat > config.env << EOF
        # Video List Automation Configuration
        
        # Master List Method (not used for transcript-only)
        MASTER_LIST_METHOD=ytdlp
        
        # Transcript Method (ytdlp or youtube_transcript_api)
        TRANSCRIPT_METHOD=${{ inputs.transcript_method }}
        
        # YouTube API Configuration
        YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
        
        # File Paths
        MASTER_FILE=data/videos_master.json
        CHANNEL_URL=https://www.youtube.com/@AdamSeekerOfficial
        
        # Update Settings
        MAX_VIDEOS_PER_UPDATE=${{ inputs.max_videos }}
        UPDATE_FREQUENCY=manual
        
        # yt-dlp Configuration (optional)
        YTDLP_COOKIES_FILE=${{ inputs.use_cookies == 'true' && './cookies.txt' || '' }}
        YTDLP_USE_PROXY=${{ inputs.use_proxy == 'true' && 'true' || 'false' }}
        
        # Proxy Configuration (optional)
        WEBSHARE_PROXY_USERNAME=${{ secrets.WEBSHARE_PROXY_USERNAME }}
        WEBSHARE_PROXY_PASSWORD=${{ secrets.WEBSHARE_PROXY_PASSWORD }}
        WEBSHARE_PROXY=${{ inputs.use_proxy == 'true' && format('http://{0}:{1}@proxy.webshare.io:80', secrets.WEBSHARE_PROXY_USERNAME, secrets.WEBSHARE_PROXY_PASSWORD) || '' }}
        
        # Notification Settings
        DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
        EMAIL_NOTIFICATIONS=false
        
        # Categories (comma-separated)
        DEFAULT_CATEGORIES=critique-of-islam,theology,apologetics,debate
        EOF
        
    - name: Create necessary directories
      run: |
        mkdir -p data/transcripts
        mkdir -p logs
        
    - name: Create cookies file if needed
      if: inputs.use_cookies == 'true'
      run: |
        echo "# Netscape HTTP Cookie File" > cookies.txt
        echo "# This is a generated file! Do not edit." >> cookies.txt
        echo "# Add your cookies here if needed" >> cookies.txt
        
    - name: Validate configuration
      run: |
        python scripts/validate_config.py
        
    - name: Download transcripts for specific videos
      if: inputs.video_ids != ''
      run: |
        python scripts/manage_transcripts.py download-videos --video-ids ${{ inputs.video_ids }} --max-videos ${{ inputs.max_videos }}
        
    - name: Download missing transcripts
      if: inputs.video_ids == ''
      run: |
        python scripts/manage_transcripts.py download-missing --max-videos ${{ inputs.max_videos }}
        
    - name: Show transcript statistics
      run: |
        python scripts/manage_transcripts.py stats
        
    - name: Commit changes
      if: always()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/transcripts/ data/videos_master.json logs/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Download transcripts via GitHub Action [skip ci]"
          git push
        fi
        
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: transcript-logs-${{ github.run_number }}
        path: logs/